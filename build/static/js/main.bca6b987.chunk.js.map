{"version":3,"sources":["assets/admin-panel-background-images-5.jpg","constants/index.js","Components/Loader/index.js","Pages/SignIn/index.js","Pages/Dashboard/index.js","root/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SIGNIN","CREATE_LEVEL","LoaderWrapper","react_default","a","createElement","className","react_loader_spinner_default","type","color","height","width","Component","errorMessage","AuthView","Loader_LoaderWrapper","SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","signInAsync","asyncToGenerator","regenerator_default","mark","_callee2","_this$state","email","password","data","settings","wrap","_context2","prev","next","setState","state","objectSpread","loading","method","mode","headers","Accept","Content-Type","body","JSON","stringify","_callee","rawResponse","content","_context","fetch","sent","status","window","alert","abrupt","json","localStorage","setItem","accessToken","refreshToken","expires","history","push","stop","handleChange","event","defineProperty","target","id","value","handleSubmit","_ref3","_callee3","_context3","preventDefault","_x","apply","arguments","length","SignIn_AuthView","key","onSubmit","FormGroup","controlId","bsSize","FormControl","placeholder","autoFocus","onChange","Button","block","validateForm","disabled","Step","_ref","item","index","onDelete","onClick","alt","title","description","imageUrl","temporaryStepReseter","globalReseter","logoUrl","isValid","time","possibleEarnings","subtitle","steps","presentPrice","temporaryStep","stepValid","Dashboard","logOutAsync","confirm","removeItem","handleSubmitAsync","e","_JSON$parse","parse","getItem","injection","validateFieldAsync","_ref5","_callee4","name","_context4","_x2","_x3","validateStepAsync","_ref6","_callee5","subTopic","values","_context5","_x4","_x5","addStep","concat","toConsumableArray","deleteStep","newSteps","filter","elemIndex","_this2","valid","as","rows","map","Dashboard_Step","bgImage","require","App","console","log","browserHistory","style","backgroundImage","es","path","exact","component","src_Pages_SignIn","Dashboard_Dashboard","Boolean","location","hostname","match","ReactDOM","render","root_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bca6b987.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/admin-panel-background-images-5.8d2b6844.jpg\";","export const SIGNIN = \"http://merchansky-001-site1.dtempurl.com/api/users/signin\";\nexport const CREATE_LEVEL = \"http://merchansky-001-site1.dtempurl.com/api/levels/create\";","import React, { Component } from \"react\";\nimport Loader from 'react-loader-spinner'\n\nimport './index.css';\n\nexport default class LoaderWrapper extends Component {\n  render() {\n    return(\n      <div className=\"Loader-wrapper\">\n        <Loader\n          type=\"Oval\"\n          color=\"#282c34ba\"\n          height=\"100\"\n          width=\"100\"\n        />\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport { Button, FormGroup, FormControl } from \"react-bootstrap\";\nimport { SIGNIN } from \"../../constants/index\";\nimport LoaderWrapper from '../../Components/Loader/index';\nimport './index.css';\n\nconst errorMessage = \"Something was wrong:\\n1. Invalid credentials\\n2. Server error.\\nPlease, try again\";\n\nconst AuthView = () => (\n  <div>\n    <LoaderWrapper/>\n    <p className=\"subtitle-auth\">Authentication...</p>\n  </div>\n);\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      email: \"\",\n      password: \"\",\n      accessToken: \"\",\n      refreshToken: \"\",\n      expires: null,\n      loading: false\n    };\n  }\n  \n  signInAsync = async () => {\n    \n    this.setState(state => ({ ...state, loading: true }));\n  \n    let { email, password } = this.state;\n  \n    const data = {\n      email: email,\n      password: password\n    };\n    \n    const settings = {\n      method: \"POST\",\n      mode: 'cors',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data)\n    };\n  \n    (async () => {\n      const rawResponse = await fetch(SIGNIN, settings);\n  \n      if (rawResponse.status > 205 && rawResponse.status < 500) {\n        this.setState(state => ({ loading: false }));\n        \n        window.alert(errorMessage);\n        \n        return false;\n      }\n  \n      const content = await rawResponse.json();\n      \n      localStorage.setItem('info', JSON.stringify({\n        accessToken: content.accessToken,\n        refreshToken: content.refreshToken,\n        expires: content.expires,\n        email: email,\n        password: password,\n      }));\n  \n      this.setState(state => ({\n        ...state,\n        accessToken: content.accessToken,\n        refreshToken: content.refreshToken,\n        expires: content.expires,\n        loading: false\n      }));\n      \n      this.props.history.push('/dashboard');\n    })();\n  };\n  \n  validateForm() {\n    return this.state.email.length > 0 && this.state.password.length > 0;\n  }\n  \n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  };\n  \n  handleSubmit = async event => {\n    \n    event.preventDefault();\n    \n    await this.signInAsync();\n  };\n  \n  render() {\n    return (\n      <div className=\"Login-wrapper\">\n        <div className=\"Login\">\n          {this.state.loading ? <AuthView/> :\n            [<h1 key=\"1\" className=\"Login-title\">Beneficio</h1>,\n              <form key=\"2\" onSubmit={this.handleSubmit}>\n                <FormGroup controlId=\"email\" bsSize=\"large\">\n                  <p className=\"subtitle\">Email</p>\n                  <FormControl\n                    placeholder=\"Email\"\n                    autoFocus\n                    type=\"email\"\n                    value={this.state.email}\n                    onChange={this.handleChange}\n                  />\n                </FormGroup>\n                <FormGroup controlId=\"password\" bsSize=\"large\">\n                  <p className=\"subtitle\">Password</p>\n                  <FormControl\n                    placeholder=\"Password\"\n                    value={this.state.password}\n                    onChange={this.handleChange}\n                    type=\"password\"\n                  />\n                </FormGroup>\n                <Button\n                  block\n                  bsSize=\"large\"\n                  className={!this.validateForm() ? \"submit-btn-error\" : \"submit-btn\"}\n                  disabled={!this.validateForm()}\n                  type=\"submit\"\n                >\n                  Login\n                </Button>\n              </form>\n            ]}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SignIn;","import React, { Component } from \"react\";\nimport { Button, FormGroup, FormControl } from \"react-bootstrap\";\nimport LoaderWrapper from '../../Components/Loader/index';\nimport { CREATE_LEVEL } from '../../constants/index';\n\nimport './index.css';\n\nconst Step = ({ item, index, onDelete }) => (\n  <div className=\"completed-step-item\">\n    <div className=\"step-header\">\n      <div className=\"step-index\">\n        Step {index + 1}.\n      </div>\n      <div className=\"step-delete\">\n        <Button\n          className=\"step-delete-btn\"\n          onClick={() => onDelete(index) }\n        >\n          Delete\n        </Button>\n      </div>\n    </div>\n    <div className=\"step-body\">\n      <div className=\"step-body-title\" alt={item.title}>\n        Title: {item.title}\n      </div>\n      <div className=\"step-body-description\" alt={item.description}>\n        Description: {item.description}\n      </div>\n      <div className=\"step-body-imgUrl\" alt={item.imageUrl}>\n        Image link: {item.imageUrl}\n      </div>\n    </div>\n  </div>\n);\n\nconst errorMessage = \"Something was wrong:\\n1. Server error.\\nPlease, try again\";\n\nconst temporaryStepReseter = {\n  title: \"\",\n  description: \"\",\n  imageUrl: \"\",\n};\n\nconst globalReseter = {\n  logoUrl: {\n    value: \"\",\n    isValid: false\n  },\n  title:  {\n    value: \"\",\n    isValid: false\n  },\n  time:  {\n    value: \"\",\n    isValid: false\n  },\n  possibleEarnings:  {\n    value: \"\",\n    isValid: false\n  },\n  description:  {\n    value: \"\",\n    isValid: false\n  },\n  subtitle:  {\n    value: \"\",\n    isValid: false\n  },\n  steps: [],\n  presentPrice:  {\n    value: \"\",\n    isValid: false\n  },\n  \n  temporaryStep: {\n    title: \"\",\n    description: \"\",\n    imageUrl: \"\",\n  },\n  \n  stepValid: false,\n  loading: false\n};\n\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      logoUrl: {\n        value: \"\",\n        isValid: false\n      },\n      title:  {\n        value: \"\",\n        isValid: false\n      },\n      time:  {\n        value: \"\",\n        isValid: false\n      },\n      possibleEarnings:  {\n        value: \"\",\n        isValid: false\n      },\n      description:  {\n        value: \"\",\n        isValid: false\n      },\n      subtitle:  {\n        value: \"\",\n        isValid: false\n      },\n      steps: [],\n      presentPrice:  {\n        value: \"\",\n        isValid: false\n      },\n      \n      temporaryStep: {\n        title: \"\",\n        description: \"\",\n        imageUrl: \"\",\n      },\n      \n      stepValid: false,\n      loading: false\n    };\n  }\n  \n  componentWillUnmount() {\n    \n    localStorage.removeItem('info');\n  }\n  \n  componentWillMount() {\n    let aValue = localStorage.getItem(\"info\");\n  \n    if (aValue === null) {\n      this.props.history.push('/');\n    }\n  }\n  \n  logOutAsync = async () => {\n    let confirmation = window.confirm(\"Do you really want to leave?\");\n    \n    if (!confirmation) {\n      return false;\n    }\n    \n    this.setState(state => ({ ...state, loading: true}));\n    \n    localStorage.removeItem('info');\n  \n    this.props.history.push('/');\n    \n    this.setState(state => ({ ...state, loading: false }));\n  };\n  \n  handleSubmitAsync = async (e) => {\n    e.preventDefault();\n    \n    let confirm = window.confirm(\"Do you really want create this level ?\");\n    \n    if (!confirm) {\n      return false;\n    }\n    \n    let { email, password } = JSON.parse(localStorage.getItem(\"info\"));\n    \n    const body = {\n      logoUrl: this.state.logoUrl.value,\n      title: this.state.title.value,\n      time: this.state.time.value,\n      possibleEarnings: this.state.possibleEarnings.value,\n      description: this.state.description.value,\n      subtitle: this.state.subtitle.value,\n      steps: this.state.steps,\n      presentPrice: this.state.presentPrice.value,\n      injection: {\n        email: email,\n        password: password\n      }\n    };\n  \n    const settings = {\n      method: \"POST\",\n      mode: 'cors',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body)\n    };\n  \n    (async () => {\n      this.setState(state => ({ ...state, loading: true }));\n      \n      const rawResponse = await fetch(CREATE_LEVEL, settings);\n    \n      if (rawResponse.status > 205 && rawResponse.status < 500) {\n        this.setState(state => ({ loading: false }));\n      \n        window.alert(errorMessage);\n      \n        return false;\n      }\n    \n      this.setState(state => ({\n        ...state,\n        ...globalReseter,\n        loading: false\n      }));\n    \n      window.alert(\"Level successfully created!\");\n    })();\n  };\n  \n  validateFieldAsync = async (name, value) => {\n    if (value === '' || value === null || value === \" \") {\n      this.setState(state => ({ ...state, [name]: { value: value, isValid: false } }));\n      \n      return false;\n    }\n  \n    this.setState(state => ({ ...state, [name]: { value: value, isValid: true } }))\n  };\n  \n  validateStepAsync = async (subTopic, value) => {\n  \n    if (value === '' || value === null || value === \" \") {\n      this.setState(state => ({\n        ...state,\n        temporaryStep: {\n          ...this.state.temporaryStep,\n          [subTopic]: value,\n        }\n      }));\n      \n      return false;\n    }\n    \n    this.setState(state => ({\n      ...state,\n      temporaryStep: {\n        ...this.state.temporaryStep,\n        [subTopic]: value,\n      }\n    }));\n  \n    let values = Object.values(this.state.temporaryStep);\n  \n    if (values[0] !== \"\" && values[1] !== \"\" && values[2] !== \"\") {\n      this.setState(state => ({ ...state, stepValid: true }));\n    }\n  };\n  \n  addStep = value => {\n    \n    this.setState(state => ({\n      ...state,\n      steps: [...this.state.steps, value],\n      temporaryStep: {\n        ...temporaryStepReseter\n      },\n      stepValid: false\n    }));\n  };\n  \n  deleteStep = (index) => {\n  \n    let newSteps = this.state.steps.filter((item, elemIndex) => elemIndex != index);\n  \n    this.setState(state => ({ ...state, steps: [ ...newSteps ] }));\n  };\n  \n  render() {\n  \n    let {\n      logoUrl,\n      title,\n      time,\n      possibleEarnings,\n      description,\n      subtitle,\n      presentPrice,\n      steps\n    } = this.state;\n    \n    let valid =\n      logoUrl.isValid &&\n      title.isValid &&\n      time.isValid &&\n      possibleEarnings.isValid &&\n      description.isValid &&\n      subtitle.isValid &&\n      presentPrice.isValid &&\n      steps.length > 0;\n    \n    return (\n      <div className=\"Dashboard\">\n        {this.state.loading ? <LoaderWrapper/> :\n          [<h1 key=\"1\" className=\"Login-title\">New level</h1>,\n            <div key=\"2\" className=\"form-wrapper\">\n              <form onSubmit={(e) => this.handleSubmitAsync(e)}>\n                <FormGroup controlId=\"text\" bsSize=\"large\">\n                  <p className=\"form-subtitle\">Logo url (Level logotype link):</p>\n                  <FormControl\n                    placeholder=\"Logo url\"\n                    autoFocus\n                    className=\"form-control-level\"\n                    type=\"text\"\n                    name=\"logoUrl\"\n                    value={this.state.logoUrl.value}\n                    onChange={e => this.validateFieldAsync(\"logoUrl\", e.target.value)}\n                  />\n                </FormGroup>\n                <div className=\"multi-column-fields\">\n                  <FormGroup controlId=\"text\" className=\"multiply-form-group\" bsSize=\"large\">\n                    <p className=\"form-multiply-subtitle\">Title (Level title):</p>\n                    <FormControl\n                      placeholder=\"Title\"\n                      autoFocus\n                      className=\"form-multiply-control-level\"\n                      type=\"text\"\n                      name=\"title\"\n                      value={this.state.title.value}\n                      onChange={e => this.validateFieldAsync(\"title\", e.target.value)}\n                    />\n                  </FormGroup>\n                  <FormGroup controlId=\"text\" className=\"multiply-form-group\" bsSize=\"large\">\n                    <p className=\"form-multiply-subtitle\">Time (Level passing time):</p>\n                    <FormControl\n                      autoFocus\n                      placeholder=\"Time\"\n                      className=\"form-multiply-control-level\"\n                      type=\"text\"\n                      name=\"time\"\n                      value={this.state.time.value}\n                      onChange={e => this.validateFieldAsync(\"time\", e.target.value)}\n                    />\n                  </FormGroup>\n                </div>\n                <FormGroup controlId=\"text\" bsSize=\"large\">\n                  <p className=\"form-subtitle\">Description (Short level description):</p>\n                  <FormControl\n                    autoFocus\n                    placeholder=\"Description\"\n                    className=\"form-textarea-level\"\n                    type=\"text\"\n                    as=\"textarea\"\n                    rows=\"3\"\n                    name=\"description\"\n                    value={this.state.description.value}\n                    onChange={e => this.validateFieldAsync(\"description\", e.target.value)}\n                  />\n                </FormGroup>\n                <div className=\"multi-column-fields\">\n                  <FormGroup controlId=\"text\" className=\"multiply-form-group\" bsSize=\"large\">\n                    <p className=\"form-multiply-subtitle\">Possible earnings (USD):</p>\n                    <FormControl\n                      placeholder=\"0.00\"\n                      autoFocus\n                      className=\"form-multiply-control-level\"\n                      type=\"text\"\n                      name=\"possibleEarnings\"\n                      value={this.state.possibleEarnings.value}\n                      onChange={e => this.validateFieldAsync(\"possibleEarnings\", e.target.value)}\n                    />\n                  </FormGroup>\n                  <FormGroup controlId=\"text\" className=\"multiply-form-group\" bsSize=\"large\">\n                    <p className=\"form-multiply-subtitle\">Present price (USD):</p>\n                    <FormControl\n                      placeholder=\"0.00\"\n                      autoFocus\n                      className=\"form-multiply-control-level\"\n                      type=\"text\"\n                      name=\"presentPrice\"\n                      value={this.state.presentPrice.value}\n                      onChange={e => this.validateFieldAsync(\"presentPrice\", e.target.value)}\n                    />\n                  </FormGroup>\n                </div>\n                <FormGroup controlId=\"text\" bsSize=\"large\">\n                  <p className=\"form-subtitle\">Subtitle (Steps to reproduce):</p>\n                  <FormControl\n                    placeholder=\"Subtitle\"\n                    autoFocus\n                    className=\"form-control-level\"\n                    type=\"text\"\n                    name=\"subtitle\"\n                    value={this.state.subtitle.value}\n                    onChange={e => this.validateFieldAsync(\"subtitle\", e.target.value)}\n                  />\n                </FormGroup>\n                <div className=\"steps-wrapper-container\">\n                  {this.state.steps.map((item, index) =>\n                    <Step key={index+item} item={item} index={index} onDelete={this.deleteStep}/>)}\n                </div>\n                <FormGroup controlId=\"text\" bsSize=\"large\">\n                  <p className=\"step-subtitle\">Steps:</p>\n                  <FormControl\n                    placeholder=\"Step title:\"\n                    autoFocus\n                    className=\"form-control-level step-field\"\n                    type=\"text\"\n                    name=\"temporaryStep\"\n                    value={this.state.temporaryStep.title}\n                    onChange={e => this.validateStepAsync(\"title\", e.target.value)}\n                  />\n                  <FormControl\n                    placeholder=\"Step description:\"\n                    autoFocus\n                    className=\"form-control-level step-field\"\n                    type=\"text\"\n                    name=\"temporaryStep\"\n                    value={this.state.temporaryStep.description}\n                    onChange={e => this.validateStepAsync(\"description\", e.target.value)}\n                  />\n                  <FormControl\n                    placeholder=\"Step image url (optional):\"\n                    autoFocus\n                    className=\"form-control-level step-field\"\n                    type=\"text\"\n                    name=\"temporaryStep\"\n                    value={this.state.temporaryStep.imageUrl}\n                    onChange={e => this.validateStepAsync(\"imageUrl\", e.target.value)}\n                  />\n                  <Button\n                    block\n                    bsSize=\"large\"\n                    className={this.state.stepValid ? \"step-add-button\" : \"step-add-button-invalid\"}\n                    disabled={!this.state.stepValid}\n                    onClick={value => this.addStep(this.state.temporaryStep)}\n                  >\n                    Add step\n                  </Button>\n                </FormGroup>\n                <Button\n                  block\n                  bsSize=\"large\"\n                  className={!valid ? \"submit-btn-error\" : \"submit-btn\"}\n                  disabled={!valid}\n                  type=\"submit\"\n                >\n                  Create level\n                </Button>\n              </form>\n              <Button\n                key=\"2\"\n                block\n                bsSize=\"large\"\n                className=\"log-out-btn\"\n                onClick={() => this.logOutAsync()}\n              >\n                Log out\n              </Button>\n            </div>\n          ]}\n      </div>\n    );\n  }\n}","import React from 'react';\nimport Login from '../Pages/SignIn/index';\nimport Dashboard from '../Pages/Dashboard/index';\nimport './App.css';\nimport { Router, Route, Link, browserHistory } from 'react-router'\n\nconst bgImage = require(\"../assets/admin-panel-background-images-5.jpg\");\n\nfunction App() {\n  console.log(browserHistory, 'browserHistory');\n  \n  return (\n    <div\n      className=\"App\"\n      name=\"some name\"\n      style={{ backgroundImage: \"url(\"+bgImage+\")\" }}\n    >\n      <Router history={browserHistory}>\n        <Route path=\"/\" exact component={() => <Login history={browserHistory}/>}/>\n        <Route path=\"/dashboard\" exact component={() => <Dashboard history={browserHistory}/>} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './root/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}